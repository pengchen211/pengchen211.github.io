<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.0">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2020-05-05T21:12:44+08:00</updated><id>/feed.xml</id><title type="html">彭晨的博客</title><subtitle></subtitle><entry><title type="html">Elasticsearch-5.2.2基于HDFS的Snapshot/Restore</title><link href="/elasticsearch/2020/04/29/es-5.2.2-snapshot_restore.html" rel="alternate" type="text/html" title="Elasticsearch-5.2.2基于HDFS的Snapshot/Restore" /><published>2020-04-29T00:00:00+08:00</published><updated>2020-04-29T00:00:00+08:00</updated><id>/elasticsearch/2020/04/29/es-5.2.2-snapshot_restore</id><content type="html" xml:base="/elasticsearch/2020/04/29/es-5.2.2-snapshot_restore.html">&lt;!-- START doctoc generated TOC please keep comment here to allow auto update --&gt;
&lt;!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE --&gt;
&lt;p&gt;&lt;strong&gt;Table of Contents&lt;/strong&gt;  &lt;em&gt;generated with &lt;a href=&quot;https://github.com/thlorenz/doctoc&quot;&gt;DocToc&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#0-%E5%8F%82%E8%80%83%E6%96%87%E6%A1%A3&quot;&gt;0. 参考文档&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#1-%E6%A6%82%E8%BF%B0&quot;&gt;1. 概述&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2-%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87&quot;&gt;2. 环境准备&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#21-elasticsearch-522&quot;&gt;2.1. elasticsearch-5.2.2&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#211-elasticsearch%E5%AE%89%E8%A3%85&quot;&gt;2.1.1. elasticsearch安装&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#212-repository-hdfs%E6%8F%92%E4%BB%B6%E5%AE%89%E8%A3%85&quot;&gt;2.1.2. repository-hdfs插件安装&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#213-%E9%80%A0%E6%95%B0&quot;&gt;2.1.3. 造数&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#22-hadoop-270&quot;&gt;2.2. hadoop-2.7.0&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#221-%E4%B8%8B%E8%BD%BD&quot;&gt;2.2.1. 下载&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#222-%E5%AE%89%E8%A3%85&quot;&gt;2.2.2. 安装&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#223-%E9%85%8D%E7%BD%AEssh%E5%85%8D%E5%AF%86&quot;&gt;2.2.3. 配置ssh免密&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#224-%E6%A0%BC%E5%BC%8F%E5%8C%96%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F&quot;&gt;2.2.4. 格式化文件系统&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#225-%E5%90%AF%E5%8A%A8hdfs&quot;&gt;2.2.5 启动HDFS&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#3-%E6%B3%A8%E5%86%8C%E4%BB%93%E5%BA%93&quot;&gt;3. 注册仓库&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#4-%E5%88%9B%E5%BB%BA%E5%BF%AB%E7%85%A7&quot;&gt;4. 创建快照&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#41-access_control_exception&quot;&gt;4.1. access_control_exception&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#42-%E6%9F%A5%E7%9C%8B%E5%BF%AB%E7%85%A7%E4%BF%A1%E6%81%AF&quot;&gt;4.2. 查看快照信息&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#43--%E5%BF%AB%E7%85%A7%E5%88%A0%E9%99%A4%E4%B8%8E%E5%81%9C%E6%AD%A2&quot;&gt;4.3.  快照删除与停止&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#5-%E5%BF%AB%E7%85%A7%E6%81%A2%E5%A4%8D&quot;&gt;5. 快照恢复&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#51-%E6%81%A2%E5%A4%8D&quot;&gt;5.1. 恢复&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#52-%E6%81%A2%E5%A4%8D%E8%BF%9B%E5%BA%A6%E6%9F%A5%E7%9C%8B&quot;&gt;5.2. 恢复进度查看&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#53-%E4%B8%AD%E6%AD%A2%E6%81%A2%E5%A4%8D&quot;&gt;5.3. 中止恢复&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;!-- END doctoc generated TOC please keep comment here to allow auto update --&gt;

&lt;h1 id=&quot;0-参考文档&quot;&gt;0. 参考文档&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/5.2/modules-snapshots.html&quot;&gt;Elasticsearch Reference[5.2.2] Snapshot And Restore&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/plugins/5.2/repository-hdfs.html&quot;&gt;HDFS Repository Plugin&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;1-概述&quot;&gt;1. 概述&lt;/h1&gt;
&lt;p&gt;最近工作中使用了es的snapshot/restore来进行跨集群同步，将步骤整理为此文档。&lt;br /&gt;
&lt;strong&gt;说明&lt;/strong&gt; ：本文仅适用于es5.2.2与hadoop2.7.0，其他版本请参考es官方文档。&lt;/p&gt;

&lt;h1 id=&quot;2-环境准备&quot;&gt;2. 环境准备&lt;/h1&gt;

&lt;h2 id=&quot;21-elasticsearch-522&quot;&gt;2.1. elasticsearch-5.2.2&lt;/h2&gt;

&lt;h3 id=&quot;211-elasticsearch安装&quot;&gt;2.1.1. elasticsearch安装&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://www.elastic.co/cn/downloads/past-releases/elasticsearch-5-2-2&quot;&gt;Elasticsearch5.2.2官网下载地址&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;将程序包解压并添加如下配置便于用head查看es信息，其他信息保持不变&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;http.cors.enabled: true
http.cors.allow-origin: &quot;*&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;启动es&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./bin/elasticsearch -d -p pid # 后台运行，将pid输出到pid文件  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;验证&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ curl localhost:9200

{
  &quot;name&quot; : &quot;ODQxF0o&quot;,
  &quot;cluster_name&quot; : &quot;elasticsearch&quot;,
  &quot;cluster_uuid&quot; : &quot;eBH2lQZGQnKa5ssUXzUEig&quot;,
  &quot;version&quot; : {
    &quot;number&quot; : &quot;5.2.2&quot;,
    &quot;build_hash&quot; : &quot;f9d9b74&quot;,
    &quot;build_date&quot; : &quot;2017-02-24T17:26:45.835Z&quot;,
    &quot;build_snapshot&quot; : false,
    &quot;lucene_version&quot; : &quot;6.4.1&quot;
  },
  &quot;tagline&quot; : &quot;You Know, for Search&quot;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;212-repository-hdfs插件安装&quot;&gt;2.1.2. repository-hdfs插件安装&lt;/h3&gt;

&lt;p&gt;若采用hdfs作为快照存储介质，需要额外安装插件(&lt;a href=&quot;https://artifacts.elastic.co/downloads/elasticsearch-plugins/repository-hdfs/repository-hdfs-5.2.2.zip&quot;&gt;插件下载地址&lt;/a&gt;)。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;安装&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ ./bin/elasticsearch-plugin install file:///path/to/repository-hdfs-5.2.2.zip
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;验证&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;查看已安装插件列表&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ ./bin/elasticsearch-plugin list
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;213-造数&quot;&gt;2.1.3. 造数&lt;/h3&gt;

&lt;p&gt;为了后续验证，在es中新建索引并添加数据。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#! /bin/bash&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 创建名为test-index的索引&lt;/span&gt;
curl &lt;span class=&quot;nt&quot;&gt;-XPUT&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'http://localhost:9200/test-index/'&lt;/span&gt; 
&lt;span class=&quot;c&quot;&gt;# 插入若干条数据&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;i &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;1..1001&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;do
  &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-XPOST&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'http://localhost:9200/test-index/doc'&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{&quot;name&quot;:&quot;tom&quot;}'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;22-hadoop-270&quot;&gt;2.2. hadoop-2.7.0&lt;/h2&gt;
&lt;h3 id=&quot;221-下载&quot;&gt;2.2.1. 下载&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://archive.apache.org/dist/hadoop/common/hadoop-2.7.0&quot;&gt;官网下载地址&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;222-安装&quot;&gt;2.2.2. 安装&lt;/h3&gt;
&lt;p&gt;为了简单起见，示例采用伪分布式安装(pseudo-distributed)，将程序包解压，并修改如下配置文件：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;etc/hadoop/hadoop-env.sh&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 设置java路径
export JAVA_HOME=/path/to/java
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;etc/hadoop/core-site.xml&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt;  
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;property&amp;gt;&lt;/span&gt;  
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;fs.defaultFS&lt;span class=&quot;nt&quot;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;  
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;hdfs://localhost:9000&lt;span class=&quot;nt&quot;&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;  
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;  
 &lt;span class=&quot;nt&quot;&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;etc/hadoop/hdfs-site.xml&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;configuration&amp;gt;&lt;/span&gt;  
     &lt;span class=&quot;nt&quot;&gt;&amp;lt;property&amp;gt;&lt;/span&gt;  
         &lt;span class=&quot;nt&quot;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;dfs.replication&lt;span class=&quot;nt&quot;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;  
         &lt;span class=&quot;nt&quot;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;1&lt;span class=&quot;nt&quot;&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;  
     &lt;span class=&quot;nt&quot;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;  
     &lt;span class=&quot;nt&quot;&gt;&amp;lt;property&amp;gt;&lt;/span&gt;  
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;dfs.name.dir&lt;span class=&quot;nt&quot;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;  
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;/tmp/hadoop/2.7.0/name&lt;span class=&quot;nt&quot;&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;  
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;  
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;property&amp;gt;&lt;/span&gt;  
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;dfs.data.dir&lt;span class=&quot;nt&quot;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;  
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;value&amp;gt;&lt;/span&gt;/tmp/hadoop/2.7.0/data&lt;span class=&quot;nt&quot;&gt;&amp;lt;/value&amp;gt;&lt;/span&gt;  
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;  
 &lt;span class=&quot;nt&quot;&gt;&amp;lt;/configuration&amp;gt;&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;223-配置ssh免密&quot;&gt;2.2.3. 配置ssh免密&lt;/h3&gt;
&lt;p&gt;若ssh loclhost无法登陆本机，则进行如下操作：&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ ssh-keygen -t rsa -P '' -f ~/.ssh/id_rsa  
$ cat ~/.ssh/id_rsa.pub &amp;gt;&amp;gt; ~/.ssh/authorized_keys  
$ chmod 0600 ~/.ssh/authorized_keys  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;224-格式化文件系统&quot;&gt;2.2.4. 格式化文件系统&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ ./bin/hdfs namenode -format
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;225-启动hdfs&quot;&gt;2.2.5 启动HDFS&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;启动&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ ./sbin/start-dfs.sh  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;验证
    &lt;ol&gt;
      &lt;li&gt;通过jps命令查看相关进程是否存在&lt;/li&gt;
      &lt;li&gt;浏览器访问web ui，地址http://localhost:50070 (hadoop2默认为50070端口)&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;3-注册仓库&quot;&gt;3. 注册仓库&lt;/h1&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl &lt;span class=&quot;nt&quot;&gt;-XPUT&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'http://localhost:9200/_snapshot/hdfs_repo'&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; 
&lt;span class=&quot;s1&quot;&gt;'{
  &quot;type&quot;: &quot;hdfs&quot;,
  &quot;settings&quot;: {
    &quot;uri&quot;: &quot;hdfs://localhost:9000&quot;,
    &quot;path&quot;: &quot;es/hdfs_repo&quot;,
    &quot;max_restore_bytes_per_sec&quot;:&quot;1mb&quot;,
    &quot;max_snapshot_bytes_per_sec&quot;:&quot;1mb&quot;
  }
}'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;若返回结果如下，则成功&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{
    &quot;acknowledged&quot;: true
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;查看HDFS目录
查看HDFS中是否已经添加相关目录&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ ./bin/hdfs dfs -ls -R /

20/04/29 21:04:45 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
drwxr-xr-x   - username supergroup          0 2020-04-29 21:03 /user
drwxr-xr-x   - username supergroup          0 2020-04-29 21:03 /user/username
drwxr-xr-x   - username supergroup          0 2020-04-29 21:03 /user/username/es
drwxr-xr-x   - username supergroup          0 2020-04-29 21:03 /user/username/es/hdfs_repo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;查看仓库信息&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ curl 'http://localhost:9200/_snapshot/_all?pretty'

{
  &quot;hdfs_repo&quot; : {
    &quot;type&quot; : &quot;hdfs&quot;,
    &quot;settings&quot; : {
      &quot;path&quot; : &quot;es/hdfs_repo&quot;,
      &quot;max_restore_bytes_per_sec&quot; : &quot;1mb&quot;,
      &quot;uri&quot; : &quot;hdfs://localhost:9000&quot;,
      &quot;max_snapshot_bytes_per_sec&quot; : &quot;1mb&quot;
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;配置说明&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;基于HDFS的配置最常用的为示例中几个，uri和path是必不可少，余下两个是限速参数，实际生产环境中也不可或缺。
参数详细说明以及其他参数请参考如下文档：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;[https://www.elastic.co/guide/en/elasticsearch/reference/2.3/modules-snapshots.html](https://www.elastic.co/guide/en/elasticsearch/reference/2.3/modules-snapshots.html)&quot;&gt;Snapshot And Restore&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/plugins/5.2/repository-hdfs-config.html&quot;&gt;HDFS存储配置说明&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;4-创建快照&quot;&gt;4. 创建快照&lt;/h1&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl -XPUT 'http://localhost:9200/_snapshot/hdfs_repo/snapshot_1?wait_for_completion=false' -d \
'{
  &quot;ignore_unavailable&quot;: true,
  &quot;include_global_state&quot;: false,
  &quot;partial&quot;: true 
}'

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;参数说明&lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;参数&lt;/th&gt;
      &lt;th&gt;说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;wait_for_completion&lt;/td&gt;
      &lt;td&gt;请求立即返回还是等待创建快照完毕后再返回，若数据量较多可以设置为false&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;ignore_unavailable&lt;/td&gt;
      &lt;td&gt;忽略创建快照时不存在的索引&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;partial&lt;/td&gt;
      &lt;td&gt;默认情况下索引存在不可用分片时该索引的备份会失败，设置此参数为true可以备份可用的分片&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;…&lt;/td&gt;
      &lt;td&gt;…&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;更多参数说明请参考官方文档&lt;/p&gt;

&lt;h2 id=&quot;41-access_control_exception&quot;&gt;4.1. access_control_exception&lt;/h2&gt;

&lt;p&gt;此时创建快照会报如下错误&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{
    &quot;error&quot;: {
        &quot;root_cause&quot;: [
            {
                &quot;type&quot;: &quot;repository_exception&quot;,
                &quot;reason&quot;: &quot;[hdfs_repo] could not read repository data from index blob&quot;
            }
        ],
        &quot;type&quot;: &quot;repository_exception&quot;,
        &quot;reason&quot;: &quot;[hdfs_repo] could not read repository data from index blob&quot;,
        &quot;caused_by&quot;: {
            &quot;type&quot;: &quot;i_o_exception&quot;,
            &quot;reason&quot;: &quot;com.google.protobuf.ServiceException: java.security.AccessControlException: access denied (\&quot;javax.security.auth.PrivateCredentialPermission\&quot; \&quot;org.apache.hadoop.security.Credentials\&quot; \&quot;read\&quot;)&quot;,
            &quot;caused_by&quot;: {
                &quot;type&quot;: &quot;service_exception&quot;,
                &quot;reason&quot;: &quot;java.security.AccessControlException: access denied (\&quot;javax.security.auth.PrivateCredentialPermission\&quot; \&quot;org.apache.hadoop.security.Credentials\&quot; \&quot;read\&quot;)&quot;,
                &quot;caused_by&quot;: {
                    &quot;type&quot;: &quot;access_control_exception&quot;,
                    &quot;reason&quot;: &quot;access denied (\&quot;javax.security.auth.PrivateCredentialPermission\&quot; \&quot;org.apache.hadoop.security.Credentials\&quot; \&quot;read\&quot;)&quot;
                }
            }
        }
    },
    &quot;status&quot;: 500
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;解决方法&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;在repository-hdfs插件的java security policy文件中添加如下内容：&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; permission javax.security.auth.PrivateCredentialPermission &quot;org.apache.hadoop.security.Credentials * \&quot;*\&quot;&quot;, &quot;read&quot;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;并在es jvm配置文件config/jvm.options中指定该策略文件:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;-Djava.security.policy=file:///path/to/plugins/repository-hdfs/plugin-security.policy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;42-查看快照信息&quot;&gt;4.2. 查看快照信息&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl'http://localhost:9200/_snapshot/hdfs_repo/snapshot_1‘
curl'http://localhost:9200/_snapshot/hdfs_repo/_all‘
curl'http://localhost:9200/_cat/snapshots/hdfs_repo?v'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;注&lt;/strong&gt;：hdfs_repo为前文已经创建了的仓库名，snapshot_1为前文已创建的快照名，后文同。&lt;/p&gt;

&lt;h2 id=&quot;43--快照删除与停止&quot;&gt;4.3.  快照删除与停止&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl -XDELETE 'http://localhost:9200/_snapshot/hdfs_repo/snapshot_1'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h1 id=&quot;5-快照恢复&quot;&gt;5. 快照恢复&lt;/h1&gt;
&lt;p&gt;示例为同集群恢复，若需跨集群恢复则需在目标集群中安装repository-hefs插件以及注册与源集群位置一样的仓库。&lt;/p&gt;

&lt;h2 id=&quot;51-恢复&quot;&gt;5.1. 恢复&lt;/h2&gt;
&lt;p&gt;为了进行验证首先删除原索引&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;删除索引&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl -XDELETE 'http://localhost:9200/test-index'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;数据恢复&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl -XPOST 'localhost:9200/_snapshot/hdfs_repo/snapshot_1/_restore?wait_for_completion=false' -d
'{
  &quot;ignore_unavailable&quot;: true,
  &quot;include_global_state&quot;: false,
  &quot;partial&quot;: true,
  &quot;index_settings&quot;:{
  	&quot;index.number_of_replicas&quot;:0
  }
}'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;参数说明
index_settings为索引设置，可以通过该参数设置索引的分片数、副本数等，其他参数含义与创建快照时相同。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;52-恢复进度查看&quot;&gt;5.2. 恢复进度查看&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl'http://localhost:9200/_snapshot/hdfs_repo/snapshot_1‘ # 信息详细，但较慢
curl'http://localhost:9200/_snapshot/hdfs_repo/snapshot_1/_status‘ # 较快，但信息少
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;53-中止恢复&quot;&gt;5.3. 中止恢复&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl -XDELETE 'http://localhost:9200/_snapshot/hdfs_repo/snapshot_1' # 与删除快照命令一样
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name></name></author><summary type="html">Table of Contents generated with DocToc</summary></entry><entry><title type="html">Redis-数据库</title><link href="/redis/2019/04/02/redis-db.html" rel="alternate" type="text/html" title="Redis-数据库" /><published>2019-04-02T00:00:00+08:00</published><updated>2019-04-02T00:00:00+08:00</updated><id>/redis/2019/04/02/redis-db</id><content type="html" xml:base="/redis/2019/04/02/redis-db.html">&lt;h4 id=&quot;reference&quot;&gt;Reference&lt;/h4&gt;
&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;《Redis设计与实现》&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;http://1e-gallery.redisbook.com/index.html&quot;&gt;Redis设计与实现图片集&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;源码版本:5.0.3&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;1-概述&quot;&gt;1. 概述&lt;/h3&gt;
&lt;p&gt;redis服务器所有的数据库保存在服务器状态结构server.h/redisServer结构的db数组中,
db数组每项都是一个server.h/redisDb结构，每个redisDb结构代表一个数据库&lt;/p&gt;
&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// server.h&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;redisServer&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;redisDb&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 初始化服务器时程序根据服务器状态的dbnum属性&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 来居诶的嗯创建多少个数据库&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 相关配置项: redis.conf -&amp;gt; databases，默认16&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dbnum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;cm&quot;&gt;/* Total number of configured DBs */&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;2-切换数据库&quot;&gt;2. 切换数据库&lt;/h3&gt;
&lt;p&gt;默认情况下redis客户端使用0号数据库，可以通过select命令进行切换。&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;127.0.0.1:6379&amp;gt; set a 100
OK
127.0.0.1:6379&amp;gt; get a
&quot;100&quot;
127.0.0.1:6379&amp;gt; select 1
OK
127.0.0.1:6379[1]&amp;gt; get a
(nil)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name></name></author><summary type="html">Reference 《Redis设计与实现》 Redis设计与实现图片集 源码版本:5.0.3</summary></entry><entry><title type="html">Redis-对象</title><link href="/redis/2019/03/20/redis-object.html" rel="alternate" type="text/html" title="Redis-对象" /><published>2019-03-20T00:00:00+08:00</published><updated>2019-03-20T00:00:00+08:00</updated><id>/redis/2019/03/20/redis-object</id><content type="html" xml:base="/redis/2019/03/20/redis-object.html">&lt;h4 id=&quot;reference&quot;&gt;Reference&lt;/h4&gt;
&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;《Redis设计与实现》&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;http://1e-gallery.redisbook.com/index.html&quot;&gt;Redis设计与实现图片集&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;源码版本:5.0.3&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;1概述&quot;&gt;1概述&lt;/h3&gt;
&lt;p&gt;redis基于前文介绍的数据结构构建了一个对象系统，包含如下五种对象:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;string&lt;/li&gt;
  &lt;li&gt;list&lt;/li&gt;
  &lt;li&gt;hash&lt;/li&gt;
  &lt;li&gt;set&lt;/li&gt;
  &lt;li&gt;zset&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;redis对对象设置多种不同数据结构的实现，以优化在特定场景下的效率&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;对象结构&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// server.h&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;redisObject&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;// 类型&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;encoding&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 编码&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lru&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LRU_BITS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;cm&quot;&gt;/* LRU time (relative to global lru_clock) or
                            * LFU data (least significant 8 bits frequency
                            * and most significant 16 bits access time). */&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;refcount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 引用计数&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ptr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 指向底层实现数据结构的指针&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;robj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;11-类型与编码实现&quot;&gt;1.1 类型与编码实现&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;查看类型与编码&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; type key // 查看类型
&amp;gt; object encoding key // 查看对象编码
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;编码&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// server.h&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/* Objects encoding. Some kind of objects like Strings and Hashes can be
 * internally represented in multiple ways. The 'encoding' field of the object
 * is set to one of this fields for this object. */&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 一些对象的底层实现可以有多种方式，例如字符串和哈希&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 如下是类型编码&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#define OBJ_ENCODING_RAW 0     &lt;/span&gt;&lt;span class=&quot;cm&quot;&gt;/* Raw representation */&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;
#define OBJ_ENCODING_INT 1     &lt;/span&gt;&lt;span class=&quot;cm&quot;&gt;/* Encoded as integer */&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;
#define OBJ_ENCODING_HT 2      &lt;/span&gt;&lt;span class=&quot;cm&quot;&gt;/* Encoded as hash table */&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;
#define OBJ_ENCODING_ZIPMAP 3  &lt;/span&gt;&lt;span class=&quot;cm&quot;&gt;/* Encoded as zipmap */&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;
#define OBJ_ENCODING_LINKEDLIST 4 &lt;/span&gt;&lt;span class=&quot;cm&quot;&gt;/* No longer used: old list encoding. */&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;
#define OBJ_ENCODING_ZIPLIST 5 &lt;/span&gt;&lt;span class=&quot;cm&quot;&gt;/* Encoded as ziplist */&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;
#define OBJ_ENCODING_INTSET 6  &lt;/span&gt;&lt;span class=&quot;cm&quot;&gt;/* Encoded as intset */&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;
#define OBJ_ENCODING_SKIPLIST 7  &lt;/span&gt;&lt;span class=&quot;cm&quot;&gt;/* Encoded as skiplist */&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;
#define OBJ_ENCODING_EMBSTR 8  &lt;/span&gt;&lt;span class=&quot;cm&quot;&gt;/* Embedded sds string encoding */&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;
#define OBJ_ENCODING_QUICKLIST 9 &lt;/span&gt;&lt;span class=&quot;cm&quot;&gt;/* Encoded as linked list of ziplists */&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;
#define OBJ_ENCODING_STREAM 10 &lt;/span&gt;&lt;span class=&quot;cm&quot;&gt;/* Encoded as a radix tree of listpacks */&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;12-字符串对象&quot;&gt;1.2 字符串对象&lt;/h4&gt;
&lt;p&gt;redis中字符串对象有三种编码方式:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;int&lt;/li&gt;
  &lt;li&gt;embstr&lt;/li&gt;
  &lt;li&gt;raw&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;当字符串长度大于一定值时，采用raw编码&lt;/p&gt;
&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// object.c&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#define OBJ_ENCODING_EMBSTR_SIZE_LIMIT 44
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;示例&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;127.0.0.1:6379&amp;gt; set str 123
OK
127.0.0.1:6379&amp;gt; object encoding str
&quot;int&quot;
127.0.0.1:6379&amp;gt; set str abcdefghijklmnopqrstuvwxyzaaaaaaaaaaaaaaaaaa
OK
127.0.0.1:6379&amp;gt; strlen str
(integer) 44
127.0.0.1:6379&amp;gt; object encoding str
&quot;embstr&quot;
127.0.0.1:6379&amp;gt; set str abcdefghijklmnopqrstuvwxyzaaaaaaaaaaaaaaaaaaa
OK
127.0.0.1:6379&amp;gt; strlen str
(integer) 45
127.0.0.1:6379&amp;gt; object encoding str
&quot;raw&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;raw与embstr对比&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;embstr编码用来保存短字符串,其内存空间连续,分配以及释放内存只需一次操作&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;raw
&lt;img src=&quot;/assets/redis/redis-string-raw.png&quot; alt=&quot;raw&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;embstr
&lt;img src=&quot;/assets/redis/redis-string-embstr.png&quot; alt=&quot;embstr&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;编码转换&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;一些情况下对字符串类型数据的修改会导致编码的变化&lt;br /&gt;
e.g.&lt;/p&gt;
&lt;blockquote&gt;

  &lt;ol&gt;
    &lt;li&gt;embstr –&amp;gt; raw&lt;/li&gt;
    &lt;li&gt;int –&amp;gt; raw&lt;/li&gt;
  &lt;/ol&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;对embstr编码的字符串修改会使编码变为raw，redis没有对embstr编码的字符串提供修改操作&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;13-列表对象&quot;&gt;1.3 列表对象&lt;/h3&gt;
&lt;p&gt;编码方式quicklist&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;相关配置&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;list-max-ziplist-size&lt;br /&gt;
list-compress-depth&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;14-哈希对象&quot;&gt;1.4 哈希对象&lt;/h3&gt;
&lt;p&gt;编码方式:ziplist, hashtable&lt;br /&gt;
&lt;strong&gt;ziplist&lt;/strong&gt;编码时，相邻的两个entry一个为key，一个为value&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;编码转换&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;相关配置
同时满足如下两个条件时使用ziplist编码
hash-max-ziplist-entries // 键值对数量&lt;br /&gt;
hash-max-ziplist-value  //  键和值的字符串长度(byte)&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;15-集合对象&quot;&gt;1.5 集合对象&lt;/h3&gt;
&lt;p&gt;编码方式：intset, hashtable&lt;br /&gt;
&lt;strong&gt;hashtable&lt;/strong&gt;编码时，使用字典作为底层实现。字典的键为一个字符串对象，
包含了一个集合元素，字典的值全部设置为NULL&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;编码转换&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;相关配置
set-max-intset-entries&lt;br /&gt;
所有元素都是整数值，且个数不超过上述配置个数时采用intset编码&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;16-有序集合对象&quot;&gt;1.6 有序集合对象&lt;/h3&gt;
&lt;p&gt;编码方式：ziplist, skiplist&lt;br /&gt;
&lt;strong&gt;ziplist&lt;/strong&gt;编码&lt;br /&gt;
相邻的两个entry一个为数据，一个为分值&lt;br /&gt;
&lt;strong&gt;skiplist&lt;/strong&gt;编码&lt;br /&gt;
此时zset结构中同时包含一个字典和一个跳跃表&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;跳跃表按分值从小到大保存所有集合元素，每个跳跃表节点保存一个元素&lt;/li&gt;
  &lt;li&gt;字典保存了一个从成员到分值的映射&lt;br /&gt;
跳跃表和字典通过指针共享相同的元素和分值&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;编码转换&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;*相关配置&lt;br /&gt;
zset-max-ziplist-entries&lt;br /&gt;
zset-max-ziplist-value&lt;br /&gt;
相关值同时小于上述配置时采用ziplist编码&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;17-内存回收&quot;&gt;1.7 内存回收&lt;/h3&gt;
&lt;p&gt;redis在其对象系统中采用引用计数实现内存回收&lt;/p&gt;
&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// server.h&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;truct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;redisObject&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 引用计数&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;refcount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// ...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;robj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;18-对象共享&quot;&gt;1.8 对象共享&lt;/h3&gt;
&lt;p&gt;使用指针指向共享的对象，同时调整共享对象的引用计数值&lt;br /&gt;
redis初始化服务器时，创建0-9999共一万个字符串对象&lt;br /&gt;
&lt;strong&gt;考虑到对象对比的耗时，redis只对包含整数值的字符串对象进行共享&lt;/strong&gt;&lt;br /&gt;
// server.h OBJ_SHARED_INTEGERS常量&lt;/p&gt;

&lt;h3 id=&quot;19-对象空转时长&quot;&gt;1.9 对象空转时长&lt;/h3&gt;
&lt;p&gt;redisObject结构中lru属性记录量对象最后以此被命令程序访问的时间，可以作为内存回收的依据&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; set a 100
&amp;gt; object idletime a
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name></name></author><summary type="html">Reference 《Redis设计与实现》 Redis设计与实现图片集 源码版本:5.0.3</summary></entry><entry><title type="html">Redis-数据结构</title><link href="/redis/2019/03/18/redis-datastructure.html" rel="alternate" type="text/html" title="Redis-数据结构" /><published>2019-03-18T00:00:00+08:00</published><updated>2019-03-18T00:00:00+08:00</updated><id>/redis/2019/03/18/redis-datastructure</id><content type="html" xml:base="/redis/2019/03/18/redis-datastructure.html">&lt;h4 id=&quot;reference&quot;&gt;Reference&lt;/h4&gt;
&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;《Redis设计与实现》&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;http://1e-gallery.redisbook.com/index.html&quot;&gt;Redis设计与实现图片集&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;https://blog.csdn.net/men_wen/article/details/70229375&quot;&gt;https://blog.csdn.net/men_wen/article/details/70229375&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;源码版本:5.0.3&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;1-简单动态字符串simple-dynamic-string&quot;&gt;1 简单动态字符串(simple dynamic string)&lt;/h3&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sdshdr&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 字符串长度&lt;/span&gt;
   &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;free&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 空闲长度&lt;/span&gt;
   &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;11-图示&quot;&gt;1.1 图示&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/assets/redis/redis-sds.png&quot; alt=&quot;sds&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;12-优点&quot;&gt;1.2 优点&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;快速获取字符串长度&lt;/li&gt;
  &lt;li&gt;避免缓冲区溢出&lt;/li&gt;
  &lt;li&gt;减少修改字符串带来的内存重分配次数
    &lt;blockquote&gt;
      &lt;p&gt;&lt;strong&gt;空间分配策略&lt;/strong&gt;&lt;/p&gt;
      &lt;ol&gt;
        &lt;li&gt;空间预分配&lt;br /&gt;
 对sds修改并需要扩展长度时，会按一定规则分配额外空间
          &lt;ul&gt;
            &lt;li&gt;长度修改后将小于1MB，则分配与len同样大小的free&lt;/li&gt;
            &lt;li&gt;将大于1MB，则分配1MB的free&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/li&gt;
        &lt;li&gt;惰性空间释放&lt;br /&gt;
 用于优化sds字符串缩短操作,当字符串缩短时，不会立即回收多于的内存，会将其作为free&lt;/li&gt;
      &lt;/ol&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;二进制安全
以二进制方式处理buf里的数据&lt;/li&gt;
  &lt;li&gt;兼容C语言字符串函数&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;2-链表&quot;&gt;2 链表&lt;/h3&gt;
&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;listNode&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;listNode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;prev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;listNode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;listNode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;list&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;listNode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;listNode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ptr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;// 节点值复制函数&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;free&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ptr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;// 节点值释放函数&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ptr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;// 节点值对比函数&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;21-图示&quot;&gt;2.1 图示&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;/assets/redis/redis-list.png&quot; alt=&quot;link&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;3-字典&quot;&gt;3 字典&lt;/h3&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// 哈希表&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dictht&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 哈希表数组&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;dictEntry&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;// dictEntry&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 哈希表大小&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 哈希表大小掩码，用于计算索引值&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 总是size - 1，决定一个key映射到table数组哪个索引上&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sizemask&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 哈希表已有节点的数量&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;used&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dictht&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 哈希表节点&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dictEntry&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 键&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 值&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;union&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;uint64_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;u64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int64_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dictEntry&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;// 用来解决hash冲突&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dictEntry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 字典&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dict&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 类型特定函数&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;dictType&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 私有函数&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;privdata&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 哈希表&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 一般只会使用ht[0]，ht[1]在rehash时使用&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;dictht&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ht&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// rehash索引&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rehashidx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;cm&quot;&gt;/* rehashing not in progress if rehashidx == -1 */&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iterators&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;cm&quot;&gt;/* number of iterators currently running */&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;31-图示&quot;&gt;3.1 图示&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;/assets/redis/redis-dictionary.png&quot; alt=&quot;dictionary&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;32-rehash&quot;&gt;3.2 rehash&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;集中式&lt;/li&gt;
  &lt;li&gt;渐进式
    &lt;blockquote&gt;
      &lt;ol&gt;
        &lt;li&gt;为ht[1]分配空间，字典同时持有2个hash表&lt;/li&gt;
        &lt;li&gt;字典中rehashindex置0&lt;/li&gt;
        &lt;li&gt;每次对字典crud，会同时将ht[0]上rehashindex索引上的所有键值对rehash到ht[1],并rehashindex++&lt;/li&gt;
        &lt;li&gt;完成后，rehashindex置-1&lt;/li&gt;
      &lt;/ol&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;4-跳跃表skiplist&quot;&gt;4 跳跃表(skiplist)&lt;/h3&gt;
&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// 节点&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;zskiplistNode&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 数据域&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sds&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ele&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 分值&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;score&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 后退指针&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;zskiplistNode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;backward&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 层&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;zskiplistLevel&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
       &lt;span class=&quot;c1&quot;&gt;// 前进指针&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;zskiplistNode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;forward&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
       &lt;span class=&quot;c1&quot;&gt;// 跨度,当前节点到前进指针指向节点的距离&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;level&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;zskiplistNode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// skiplist&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;zskiplist&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 头尾节点&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;zskiplistNode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;header&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 跳表长度&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 所有节点中最大的层数&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;level&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;zskiplist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;41-图示&quot;&gt;4.1 图示&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;/assets/redis/redis-skiplist.png&quot; alt=&quot;skiplist&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;5-整数集合intset&quot;&gt;5 整数集合(intset)&lt;/h3&gt;
&lt;p&gt;redis中set类型的底层实现之一,当一个set只包含整数值元素且数量不多时，就会采用intset作为底层实现&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// intset.h&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;intset&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;uint32_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;encoding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//编码方式&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;uint32_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//元素数量&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int8_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;contents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//保存元素的数组,从小到大,具体元素类型取决于encoding&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;intset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;51-升级upgrade&quot;&gt;5.1 升级(upgrade)&lt;/h4&gt;
&lt;p&gt;添加新元素时，若新元素比现有元素类型要长，intset需要先进行升级(upgrade),之后才能添加新元素&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;升级步骤&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;ol&gt;
    &lt;li&gt;根据新元素类型扩展contents数组大小，并为新元素分配空间&lt;/li&gt;
    &lt;li&gt;转换现有元素类型，需保证原有顺序不变&lt;/li&gt;
    &lt;li&gt;插入新元素&lt;/li&gt;
  &lt;/ol&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;升级优点&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;提升灵活性，而不必担心出现类型错误&lt;/li&gt;
    &lt;li&gt;节约空间&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;intset不支持降级操作，一旦升级就会保持升级后的状态&lt;/p&gt;

&lt;h3 id=&quot;6-压缩列表ziplist&quot;&gt;6 压缩列表(ziplist)&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;The ziplist is a specially encoded dually linked list that is designed
to be very memory efficient. It stores both strings and integer values,
where integers are encoded as actual integers instead of a series of
characters. It allows push and pop operations on either side of the list
in O(1) time. However, because every operation requires a reallocation of
the memory used by the ziplist, the actual complexity is related to the
amount of memory used by the ziplist.// 来自ziplist.c中的注释&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;61-layout&quot;&gt;6.1 Layout&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &amp;lt;zlbytes&amp;gt; &amp;lt;zltail&amp;gt; &amp;lt;zllen&amp;gt; &amp;lt;entry&amp;gt; &amp;lt;entry&amp;gt; ... &amp;lt;entry&amp;gt; &amp;lt;zlend&amp;gt;
 
  NOTE: all fields are stored in little endian, if not specified otherwise.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;field&lt;/th&gt;
      &lt;th&gt;字节数&lt;/th&gt;
      &lt;th&gt;说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;zlbytes&lt;/td&gt;
      &lt;td&gt;4bytes&lt;/td&gt;
      &lt;td&gt;ziplist占用的字节数&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;zltail&lt;/td&gt;
      &lt;td&gt;4bytes&lt;/td&gt;
      &lt;td&gt;ziplist尾节点距起始地址多少字节&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;zllen&lt;/td&gt;
      &lt;td&gt;2bytes&lt;/td&gt;
      &lt;td&gt;ziplist包含的节点数量，当节点数量超出其表示范围时节点数量需遍历才能知道&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;entry&lt;/td&gt;
      &lt;td&gt;不定&lt;/td&gt;
      &lt;td&gt;ziplist包含的各个节点，其长度由其内容决定&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;zlend&lt;/td&gt;
      &lt;td&gt;1byte&lt;/td&gt;
      &lt;td&gt;标识ziplist末端，固定值:0xFF(十进制255)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h4 id=&quot;62-节点&quot;&gt;6.2 节点&lt;/h4&gt;
&lt;p&gt;每个ziplist的节点可以保存一个字节数组或者一个整数数值&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &amp;lt;prevlen&amp;gt; &amp;lt;encoding&amp;gt; &amp;lt;entry-data&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;prevlen&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;表示前一个节点长度(byte),自身长度分两种情况：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;1字节 前一个节点长度小于254bytes,则只占一字节&lt;/li&gt;
  &lt;li&gt;5字节 前一个节点长度不小于254,占5字节.第一字节置254(0xFE)作为标识，余下4字节来表示长度&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;encoding&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;记录entry-data属性保存的数据类型以及长度,自身长度分两种情况:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;1,2或者5字节 值的最高位为00,01或者10.此时entry-data保存着字节数组,长度由encoding除去最高2位后的其他位记录&lt;/li&gt;
  &lt;li&gt;1字节 最高位以11开头.此时entry-data保存着整数值&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;字节数组编码&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;encoding&lt;/th&gt;
      &lt;th&gt;编码长度&lt;/th&gt;
      &lt;th&gt;entry-data属性保存的值&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;00xxxxx&lt;/td&gt;
      &lt;td&gt;1byte&lt;/td&gt;
      &lt;td&gt;长度&amp;lt;=2^6的字节数组&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;01xxxxxx xxxxxxxx&lt;/td&gt;
      &lt;td&gt;2bytes&lt;/td&gt;
      &lt;td&gt;长度&amp;lt;= 2^14的字节数组&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;11xxxxxx . . . .&lt;/td&gt;
      &lt;td&gt;5bytes&lt;/td&gt;
      &lt;td&gt;长度&amp;lt;= 2^46的字节数组&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;整数编码&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;encoding&lt;/th&gt;
      &lt;th&gt;编码长度&lt;/th&gt;
      &lt;th&gt;entry-data属性保存的值&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;11000000&lt;/td&gt;
      &lt;td&gt;1byte&lt;/td&gt;
      &lt;td&gt;int16_t类型的整数&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;11010000&lt;/td&gt;
      &lt;td&gt;1byte&lt;/td&gt;
      &lt;td&gt;int32_t类型的整数&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;11100000&lt;/td&gt;
      &lt;td&gt;1byte&lt;/td&gt;
      &lt;td&gt;int64_t类型的整数&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;11110000&lt;/td&gt;
      &lt;td&gt;1byte&lt;/td&gt;
      &lt;td&gt;24位有符号整数&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;11111110&lt;/td&gt;
      &lt;td&gt;1byte&lt;/td&gt;
      &lt;td&gt;8位有符号整数&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;1111xxxx&lt;/td&gt;
      &lt;td&gt;1byte&lt;/td&gt;
      &lt;td&gt;此时无需entry-data属性，用xxxx来表示0 - 12&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;em&gt;说明&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;1111xxxx时，后4位不能为0000, 1110, 1111.前两个已在其他encoding中使用,最后一个为ziplist的结束标识,故只能0001~1101，又因数值从0开始故又在其基础上减1&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;entry-data&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;保存节点的值，字节数组或者整数，由encoding决定&lt;/p&gt;

&lt;h4 id=&quot;63-连锁更新&quot;&gt;6.3 连锁更新&lt;/h4&gt;
&lt;p&gt;当一系列略小于254bytes的节点前出现一个大于254bytes的节点后，使得后续节点连续扩展prevlen为5bytes&lt;/p&gt;
&lt;blockquote&gt;
  &lt;ol&gt;
    &lt;li&gt;插入大节点&lt;/li&gt;
    &lt;li&gt;删除节点与大节点之间的节点，使得小节点前出现了大节&lt;/li&gt;
  &lt;/ol&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;图示&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/redis/redis-ziplist-chain-update.png&quot; alt=&quot;chain-extend&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;7-快速列表quicklist&quot;&gt;7 快速列表(quicklist)&lt;/h3&gt;
&lt;p&gt;多个quicklistNode结构组成一个双向链表，每个节点指向一个ziplist
quicklist结构再持有双向链表的头、尾&lt;/p&gt;
&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// quicklist.h&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// quicklist is a 40 byte struct (on 64-bit systems) describing a quicklist.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 'count' is the number of total entries.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 'len' is the number of quicklist nodes.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 'compress' is: -1 if compression disabled, otherwise it's the number&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// of quicklistNodes to leave uncompressed at ends of quicklist.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//  'fill' is the user-requested (or default) fill factor.&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;quicklist&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;quicklistNode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;head&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;quicklistNode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;        &lt;span class=&quot;cm&quot;&gt;/* total count of all entries in all ziplists */&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;          &lt;span class=&quot;cm&quot;&gt;/* number of quicklistNodes */&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 对应list-max-ziplist-size配置项&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// specify the number of entries for per list node&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 负数(-1~-5)标识fixed maximun size&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 整数表示ziplist中entry的个数&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fill&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;              &lt;span class=&quot;cm&quot;&gt;/* fill factor for individual nodes */&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 对应list-compress-depth配置项&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 压缩深度，0表示不压缩，1表示两端各一个节点不压缩&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 依此类推&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;compress&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;cm&quot;&gt;/* depth of end nodes not to compress;0=off */&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;quicklist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// quicklistNode is a 32 byte struct describing a ziplist for a quicklist.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// We use bit fields keep the quicklistNode at 32 bytes.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// count: 16 bits, max 65536 (max zl bytes is 65k, so max count actually &amp;lt; 32k).&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// encoding: 2 bits, RAW=1, LZF=2.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// container: 2 bits, NONE=1, ZIPLIST=2.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// recompress: 1 bit, bool, true if node is temporarry decompressed for usage.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// attempted_compress: 1 bit, boolean, used for verifying during testing.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//  extra: 10 bits, free for future use; pads out the remainder of 32 bits   &lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;quicklistNode&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;quicklistNode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;prev&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;quicklistNode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sz&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;             &lt;span class=&quot;cm&quot;&gt;/* ziplist size in bytes */&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;     &lt;span class=&quot;cm&quot;&gt;/* count of items in ziplist */&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 压缩编码&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;encoding&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;   &lt;span class=&quot;cm&quot;&gt;/* RAW==1 or LZF==2 */&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 是否采用ziplist结构保存数据&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;container&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;cm&quot;&gt;/* NONE==1 or ZIPLIST==2 */&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 标记节点是否被压缩过&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;recompress&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;cm&quot;&gt;/* was this node previous compressed? */&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;attempted_compress&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;cm&quot;&gt;/* node can't compress; too small */&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;extra&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;cm&quot;&gt;/* more bits to steal for future usage */&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;quicklistNode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// quicklistLZF is a 4+N byte struct holding 'sz' followed by 'compressed'.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 'sz' is byte length of 'compressed' field.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 'compressed' is LZF data with total (compressed) length 'sz'&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// NOTE: uncompressed length is stored in quicklistNode-&amp;gt;sz.&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// When quicklistNode-&amp;gt;zl is compressed, node-&amp;gt;zl points to a quicklistLZF &lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 压缩过的ziplist结构,采用lzf压缩算法&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;quicklistLZF&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sz&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;cm&quot;&gt;/* LZF size in bytes*/&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;compressed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;quicklistLZF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name></name></author><summary type="html">Reference 《Redis设计与实现》 Redis设计与实现图片集 https://blog.csdn.net/men_wen/article/details/70229375 源码版本:5.0.3</summary></entry><entry><title type="html">Redis-概要</title><link href="/redis/2019/03/17/redis-summary.html" rel="alternate" type="text/html" title="Redis-概要" /><published>2019-03-17T00:00:00+08:00</published><updated>2019-03-17T00:00:00+08:00</updated><id>/redis/2019/03/17/redis-summary</id><content type="html" xml:base="/redis/2019/03/17/redis-summary.html">&lt;h3 id=&quot;1思维导图&quot;&gt;1.思维导图&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;待完善&lt;/strong&gt;
&lt;img src=&quot;/assets/redis/redis-xmind.png&quot; alt=&quot;xmind&quot; /&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">1.思维导图 待完善</summary></entry></feed>